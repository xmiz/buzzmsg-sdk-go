package chat

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/xmiz/buzzmsg-sdk-go/sdk/requests"
	"github.com/xmiz/buzzmsg-sdk-go/sdk/responses"
)

// Chat invokes the chat.Chat API synchronously
func (client *Client) Chat(request *Request) (response *Response, err error) {
	response = CreateChatResponse()
	//err = client.DoAction(request, response)
	return
}

// Request is the request struct for api Chat
type Request struct {
	*requests.HttpRequest
	AChatId string                 `json:"achat_id" binding:"required"`
	AUIds   []string               `json:"auids"`
	Type    int8                   `json:"type"`
	Creator string                 `json:"creator"`
	Name    string                 `json:"name"`
	Avatar  map[string]interface{} `json:"avatar"`
}

// Response is the response struct for api Chat
type Response struct {
	*responses.BaseResponse
	RequestId string `json:"RequestId" xml:"RequestId"`
	SessionId string `json:"SessionId" xml:"SessionId"`
	MessageId string `json:"MessageId" xml:"MessageId"`
	Tag       string `json:"Tag" xml:"Tag"`
}

// CreateChatRequest creates a request to invoke Chat API
func CreateChatRequest() (request *Request) {
	request = &Request{
		HttpRequest: &requests.HttpRequest{},
	}
	request.InitWithApiInfo("Chat", "2017-10-11", "Chat", "beebot", "openAPI")
	return
}

// CreateChatResponse creates a response to parse from Chat response
func CreateChatResponse() (response *Response) {
	response = &Response{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
